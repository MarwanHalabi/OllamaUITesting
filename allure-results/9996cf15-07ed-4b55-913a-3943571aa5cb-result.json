{"name": "test_page_title", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome=139.0.7258.128)\nStacktrace:\n0   chromedriver                        0x0000000100d1b26c cxxbridge1$str$ptr + 2741972\n1   chromedriver                        0x0000000100d131dc cxxbridge1$str$ptr + 2709060\n2   chromedriver                        0x000000010085d4fc cxxbridge1$string$len + 90520\n3   chromedriver                        0x0000000100855984 cxxbridge1$string$len + 58912\n4   chromedriver                        0x0000000100848614 cxxbridge1$string$len + 4784\n5   chromedriver                        0x000000010084a014 cxxbridge1$string$len + 11440\n6   chromedriver                        0x0000000100848a68 cxxbridge1$string$len + 5892\n7   chromedriver                        0x00000001008483bc cxxbridge1$string$len + 4184\n8   chromedriver                        0x0000000100848108 cxxbridge1$string$len + 3492\n9   chromedriver                        0x0000000100845ec0 chromedriver + 204480\n10  chromedriver                        0x000000010084691c chromedriver + 207132\n11  chromedriver                        0x0000000100860560 cxxbridge1$string$len + 102908\n12  chromedriver                        0x00000001008e684c cxxbridge1$string$len + 652520\n13  chromedriver                        0x00000001008e5db8 cxxbridge1$string$len + 649812\n14  chromedriver                        0x0000000100898d30 cxxbridge1$string$len + 334284\n15  chromedriver                        0x0000000100cde66c cxxbridge1$str$ptr + 2493140\n16  chromedriver                        0x0000000100ce18a0 cxxbridge1$str$ptr + 2505992\n17  chromedriver                        0x0000000100cbf4a4 cxxbridge1$str$ptr + 2365708\n18  chromedriver                        0x0000000100ce215c cxxbridge1$str$ptr + 2508228\n19  chromedriver                        0x0000000100cb059c cxxbridge1$str$ptr + 2304516\n20  chromedriver                        0x0000000100d01c78 cxxbridge1$str$ptr + 2638048\n21  chromedriver                        0x0000000100d01e04 cxxbridge1$str$ptr + 2638444\n22  chromedriver                        0x0000000100d12e28 cxxbridge1$str$ptr + 2708112\n23  libsystem_pthread.dylib             0x000000018fb57c0c _pthread_start + 136\n24  libsystem_pthread.dylib             0x000000018fb52b80 thread_start + 8", "trace": "self = <tests.test_example.ExampleTestCase testMethod=test_page_title>\n\n    def setUp(self):\n        self.driver = get_driver()\n>       self.driver.get(OLLAMA_URL)\n\ntests/test_example.py:13: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../.pyenv/versions/lamaVenv3126/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:479: in get\n    self.execute(Command.GET, {\"url\": url})\n../../.pyenv/versions/lamaVenv3126/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:454: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x107325f40>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_CONNECTION_REFUSED\\\\n  ...00018fb57c0c _pthread_start + 136\\\\n24  libsystem_pthread.dylib             0x000000018fb52b80 thread_start + 8\\\\n\"}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\")\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\nE         (Session info: chrome=139.0.7258.128)\nE       Stacktrace:\nE       0   chromedriver                        0x0000000100d1b26c cxxbridge1$str$ptr + 2741972\nE       1   chromedriver                        0x0000000100d131dc cxxbridge1$str$ptr + 2709060\nE       2   chromedriver                        0x000000010085d4fc cxxbridge1$string$len + 90520\nE       3   chromedriver                        0x0000000100855984 cxxbridge1$string$len + 58912\nE       4   chromedriver                        0x0000000100848614 cxxbridge1$string$len + 4784\nE       5   chromedriver                        0x000000010084a014 cxxbridge1$string$len + 11440\nE       6   chromedriver                        0x0000000100848a68 cxxbridge1$string$len + 5892\nE       7   chromedriver                        0x00000001008483bc cxxbridge1$string$len + 4184\nE       8   chromedriver                        0x0000000100848108 cxxbridge1$string$len + 3492\nE       9   chromedriver                        0x0000000100845ec0 chromedriver + 204480\nE       10  chromedriver                        0x000000010084691c chromedriver + 207132\nE       11  chromedriver                        0x0000000100860560 cxxbridge1$string$len + 102908\nE       12  chromedriver                        0x00000001008e684c cxxbridge1$string$len + 652520\nE       13  chromedriver                        0x00000001008e5db8 cxxbridge1$string$len + 649812\nE       14  chromedriver                        0x0000000100898d30 cxxbridge1$string$len + 334284\nE       15  chromedriver                        0x0000000100cde66c cxxbridge1$str$ptr + 2493140\nE       16  chromedriver                        0x0000000100ce18a0 cxxbridge1$str$ptr + 2505992\nE       17  chromedriver                        0x0000000100cbf4a4 cxxbridge1$str$ptr + 2365708\nE       18  chromedriver                        0x0000000100ce215c cxxbridge1$str$ptr + 2508228\nE       19  chromedriver                        0x0000000100cb059c cxxbridge1$str$ptr + 2304516\nE       20  chromedriver                        0x0000000100d01c78 cxxbridge1$str$ptr + 2638048\nE       21  chromedriver                        0x0000000100d01e04 cxxbridge1$str$ptr + 2638444\nE       22  chromedriver                        0x0000000100d12e28 cxxbridge1$str$ptr + 2708112\nE       23  libsystem_pthread.dylib             0x000000018fb57c0c _pthread_start + 136\nE       24  libsystem_pthread.dylib             0x000000018fb52b80 thread_start + 8\n\n../../.pyenv/versions/lamaVenv3126/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:232: WebDriverException"}, "start": 1755584906778, "stop": 1755584909563, "uuid": "ba79f97e-df46-4739-a89d-c577e1ee0e26", "historyId": "1f00af4742c2562b8d24e8127e7405ec", "testCaseId": "1f00af4742c2562b8d24e8127e7405ec", "fullName": "tests.test_example.ExampleTestCase#test_page_title", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_example"}, {"name": "subSuite", "value": "ExampleTestCase"}, {"name": "host", "value": "Marwans-MacBook-Pro.local"}, {"name": "thread", "value": "18442-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_example"}], "titlePath": ["tests", "test_example.py", "ExampleTestCase"]}