{"name": "test_chat_flow", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n0   chromedriver                        0x000000010507726c cxxbridge1$str$ptr + 2741972\n1   chromedriver                        0x000000010506f1dc cxxbridge1$str$ptr + 2709060\n2   chromedriver                        0x0000000104bb94fc cxxbridge1$string$len + 90520\n3   chromedriver                        0x0000000104c00a14 cxxbridge1$string$len + 382640\n4   chromedriver                        0x0000000104c41db8 cxxbridge1$string$len + 649812\n5   chromedriver                        0x0000000104bf4d30 cxxbridge1$string$len + 334284\n6   chromedriver                        0x000000010503a66c cxxbridge1$str$ptr + 2493140\n7   chromedriver                        0x000000010503d8a0 cxxbridge1$str$ptr + 2505992\n8   chromedriver                        0x000000010501b4a4 cxxbridge1$str$ptr + 2365708\n9   chromedriver                        0x000000010503e15c cxxbridge1$str$ptr + 2508228\n10  chromedriver                        0x000000010500c59c cxxbridge1$str$ptr + 2304516\n11  chromedriver                        0x000000010505dc78 cxxbridge1$str$ptr + 2638048\n12  chromedriver                        0x000000010505de04 cxxbridge1$str$ptr + 2638444\n13  chromedriver                        0x000000010506ee28 cxxbridge1$str$ptr + 2708112\n14  libsystem_pthread.dylib             0x000000018fb57c0c _pthread_start + 136\n15  libsystem_pthread.dylib             0x000000018fb52b80 thread_start + 8", "trace": "self = <tests.test_chat_flow.ChatFlowTestCase testMethod=test_chat_flow>\n\n    def test_chat_flow(self):\n        driver = self.driver\n    \n        # Open model dropdown\n        model_selector = WebDriverWait(driver, 10).until(\n            EC.element_to_be_clickable((By.XPATH, \"//button[@role='combobox']\"))\n        )\n        model_selector.click()\n    \n>       model_option = WebDriverWait(driver, 10).until(\n        EC.element_to_be_clickable((By.XPATH, \"//*[contains(text(), 'gemma3')]\"))\n        )\n\ntests/test_chat_flow.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"315ae65f84912f9e3f21071442a7e076\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x102733c40>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       0   chromedriver                        0x000000010507726c cxxbridge1$str$ptr + 2741972\nE       1   chromedriver                        0x000000010506f1dc cxxbridge1$str$ptr + 2709060\nE       2   chromedriver                        0x0000000104bb94fc cxxbridge1$string$len + 90520\nE       3   chromedriver                        0x0000000104c00a14 cxxbridge1$string$len + 382640\nE       4   chromedriver                        0x0000000104c41db8 cxxbridge1$string$len + 649812\nE       5   chromedriver                        0x0000000104bf4d30 cxxbridge1$string$len + 334284\nE       6   chromedriver                        0x000000010503a66c cxxbridge1$str$ptr + 2493140\nE       7   chromedriver                        0x000000010503d8a0 cxxbridge1$str$ptr + 2505992\nE       8   chromedriver                        0x000000010501b4a4 cxxbridge1$str$ptr + 2365708\nE       9   chromedriver                        0x000000010503e15c cxxbridge1$str$ptr + 2508228\nE       10  chromedriver                        0x000000010500c59c cxxbridge1$str$ptr + 2304516\nE       11  chromedriver                        0x000000010505dc78 cxxbridge1$str$ptr + 2638048\nE       12  chromedriver                        0x000000010505de04 cxxbridge1$str$ptr + 2638444\nE       13  chromedriver                        0x000000010506ee28 cxxbridge1$str$ptr + 2708112\nE       14  libsystem_pthread.dylib             0x000000018fb57c0c _pthread_start + 136\nE       15  libsystem_pthread.dylib             0x000000018fb52b80 thread_start + 8\n\n../../.pyenv/versions/lamaVenv3126/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:138: TimeoutException"}, "start": 1755585336044, "stop": 1755585347606, "uuid": "2b70d0fa-1385-4877-9335-86e981f77aa9", "historyId": "f9e956b7d975b879ade45fdfd0bf1183", "testCaseId": "f9e956b7d975b879ade45fdfd0bf1183", "fullName": "tests.test_chat_flow.ChatFlowTestCase#test_chat_flow", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_chat_flow"}, {"name": "subSuite", "value": "ChatFlowTestCase"}, {"name": "host", "value": "Marwans-MacBook-Pro.local"}, {"name": "thread", "value": "22904-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_chat_flow"}], "titlePath": ["tests", "test_chat_flow.py", "ChatFlowTestCase"]}